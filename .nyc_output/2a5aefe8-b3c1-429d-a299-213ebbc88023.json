{"/home/usuario/practicas/Guillermo-Plaza-practica7/src/ejercicio-clase/rational/rational.ts":{"path":"/home/usuario/practicas/Guillermo-Plaza-practica7/src/ejercicio-clase/rational/rational.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":16,"column":8},"end":{"line":16,"column":35}},"3":{"start":{"line":17,"column":8},"end":{"line":17,"column":39}},"4":{"start":{"line":18,"column":8},"end":{"line":20,"column":9}},"5":{"start":{"line":19,"column":12},"end":{"line":19,"column":58}},"6":{"start":{"line":21,"column":20},"end":{"line":21,"column":90}},"7":{"start":{"line":22,"column":8},"end":{"line":22,"column":41}},"8":{"start":{"line":23,"column":8},"end":{"line":23,"column":45}},"9":{"start":{"line":24,"column":8},"end":{"line":27,"column":9}},"10":{"start":{"line":25,"column":12},"end":{"line":25,"column":45}},"11":{"start":{"line":26,"column":12},"end":{"line":26,"column":49}},"12":{"start":{"line":36,"column":8},"end":{"line":36,"column":66}},"13":{"start":{"line":44,"column":29},"end":{"line":44,"column":100}},"14":{"start":{"line":45,"column":31},"end":{"line":45,"column":67}},"15":{"start":{"line":46,"column":8},"end":{"line":46,"column":58}},"16":{"start":{"line":54,"column":29},"end":{"line":54,"column":100}},"17":{"start":{"line":55,"column":31},"end":{"line":55,"column":67}},"18":{"start":{"line":56,"column":8},"end":{"line":56,"column":58}},"19":{"start":{"line":64,"column":29},"end":{"line":64,"column":61}},"20":{"start":{"line":65,"column":31},"end":{"line":65,"column":67}},"21":{"start":{"line":66,"column":8},"end":{"line":66,"column":58}},"22":{"start":{"line":74,"column":8},"end":{"line":76,"column":9}},"23":{"start":{"line":75,"column":12},"end":{"line":75,"column":53}},"24":{"start":{"line":77,"column":29},"end":{"line":77,"column":63}},"25":{"start":{"line":78,"column":31},"end":{"line":78,"column":65}},"26":{"start":{"line":79,"column":8},"end":{"line":79,"column":58}},"27":{"start":{"line":86,"column":8},"end":{"line":86,"column":82}},"28":{"start":{"line":93,"column":8},"end":{"line":98,"column":9}},"29":{"start":{"line":94,"column":12},"end":{"line":94,"column":39}},"30":{"start":{"line":97,"column":12},"end":{"line":97,"column":59}},"31":{"start":{"line":101,"column":0},"end":{"line":101,"column":28}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":15,"column":4},"end":{"line":15,"column":5}},"loc":{"start":{"line":15,"column":40},"end":{"line":28,"column":5}},"line":15},"1":{"name":"(anonymous_1)","decl":{"start":{"line":35,"column":4},"end":{"line":35,"column":5}},"loc":{"start":{"line":35,"column":32},"end":{"line":37,"column":5}},"line":35},"2":{"name":"(anonymous_2)","decl":{"start":{"line":43,"column":4},"end":{"line":43,"column":5}},"loc":{"start":{"line":43,"column":15},"end":{"line":47,"column":5}},"line":43},"3":{"name":"(anonymous_3)","decl":{"start":{"line":53,"column":4},"end":{"line":53,"column":5}},"loc":{"start":{"line":53,"column":20},"end":{"line":57,"column":5}},"line":53},"4":{"name":"(anonymous_4)","decl":{"start":{"line":63,"column":4},"end":{"line":63,"column":5}},"loc":{"start":{"line":63,"column":20},"end":{"line":67,"column":5}},"line":63},"5":{"name":"(anonymous_5)","decl":{"start":{"line":73,"column":4},"end":{"line":73,"column":5}},"loc":{"start":{"line":73,"column":18},"end":{"line":80,"column":5}},"line":73},"6":{"name":"(anonymous_6)","decl":{"start":{"line":85,"column":4},"end":{"line":85,"column":5}},"loc":{"start":{"line":85,"column":10},"end":{"line":87,"column":5}},"line":85},"7":{"name":"(anonymous_7)","decl":{"start":{"line":92,"column":4},"end":{"line":92,"column":5}},"loc":{"start":{"line":92,"column":15},"end":{"line":99,"column":5}},"line":92}},"branchMap":{"0":{"loc":{"start":{"line":18,"column":8},"end":{"line":20,"column":9}},"type":"if","locations":[{"start":{"line":18,"column":8},"end":{"line":20,"column":9}},{"start":{"line":18,"column":8},"end":{"line":20,"column":9}}],"line":18},"1":{"loc":{"start":{"line":24,"column":8},"end":{"line":27,"column":9}},"type":"if","locations":[{"start":{"line":24,"column":8},"end":{"line":27,"column":9}},{"start":{"line":24,"column":8},"end":{"line":27,"column":9}}],"line":24},"2":{"loc":{"start":{"line":36,"column":15},"end":{"line":36,"column":65}},"type":"cond-expr","locations":[{"start":{"line":36,"column":25},"end":{"line":36,"column":26}},{"start":{"line":36,"column":29},"end":{"line":36,"column":65}}],"line":36},"3":{"loc":{"start":{"line":74,"column":8},"end":{"line":76,"column":9}},"type":"if","locations":[{"start":{"line":74,"column":8},"end":{"line":76,"column":9}},{"start":{"line":74,"column":8},"end":{"line":76,"column":9}}],"line":74},"4":{"loc":{"start":{"line":93,"column":8},"end":{"line":98,"column":9}},"type":"if","locations":[{"start":{"line":93,"column":8},"end":{"line":98,"column":9}},{"start":{"line":93,"column":8},"end":{"line":98,"column":9}}],"line":93}},"s":{"0":1,"1":1,"2":84,"3":84,"4":84,"5":1,"6":83,"7":83,"8":83,"9":83,"10":1,"11":1,"12":281,"13":12,"14":12,"15":12,"16":10,"17":10,"18":10,"19":22,"20":22,"21":22,"22":7,"23":1,"24":6,"25":6,"26":6,"27":9,"28":28,"29":2,"30":26,"31":1},"f":{"0":84,"1":281,"2":12,"3":10,"4":22,"5":7,"6":9,"7":28},"b":{"0":[1,83],"1":[1,82],"2":[83,198],"3":[1,6],"4":[2,26]},"inputSourceMap":{"version":3,"file":"/home/usuario/practicas/Guillermo-Plaza-practica7/src/ejercicio-clase/rational/rational.ts","sources":["/home/usuario/practicas/Guillermo-Plaza-practica7/src/ejercicio-clase/rational/rational.ts"],"names":[],"mappings":";;;AAAA;;GAEG;AACH,MAAa,QAAQ;IAME;IAA0B;IAL7C;;;;OAIG;IACH,YAAmB,SAAiB,EAAS,WAAmB;QAA7C,cAAS,GAAT,SAAS,CAAQ;QAAS,gBAAW,GAAX,WAAW,CAAQ;QAC5D,IAAI,WAAW,KAAK,CAAC,EAAE,CAAC;YACpB,MAAM,IAAI,KAAK,CAAC,4BAA4B,CAAC,CAAC;QAClD,CAAC;QACD,MAAM,GAAG,GAAG,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC;QACnF,IAAI,CAAC,SAAS,GAAG,SAAS,GAAG,GAAG,CAAC;QACjC,IAAI,CAAC,WAAW,GAAG,WAAW,GAAG,GAAG,CAAC;QAErC,IAAI,WAAW,GAAG,CAAC,EAAE,CAAC;YAClB,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;YACjC,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;QACzC,CAAC;IACL,CAAC;IAED;;;;;OAKG;IACK,qBAAqB,CAAC,CAAS,EAAE,CAAS;QAC9C,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IAC9D,CAAC;IAED;;;;OAIG;IACH,GAAG,CAAC,KAAe;QACf,MAAM,YAAY,GAAG,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,WAAW,GAAG,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC;QAC7F,MAAM,cAAc,GAAG,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,WAAW,CAAC;QAC5D,OAAO,IAAI,QAAQ,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC;IACtD,CAAC;IAED;;;;OAIG;IACH,QAAQ,CAAC,KAAe;QACpB,MAAM,YAAY,GAAG,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,WAAW,GAAG,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC;QAC7F,MAAM,cAAc,GAAG,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,WAAW,CAAC;QAC5D,OAAO,IAAI,QAAQ,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC;IACtD,CAAC;IAED;;;;OAIG;IACH,QAAQ,CAAC,KAAe;QACpB,MAAM,YAAY,GAAG,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;QACtD,MAAM,cAAc,GAAG,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,WAAW,CAAC;QAC5D,OAAO,IAAI,QAAQ,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC;IACtD,CAAC;IAED;;;;OAIG;IACH,MAAM,CAAC,KAAe;QAClB,IAAI,KAAK,CAAC,SAAS,KAAK,CAAC,EAAE,CAAC;YACxB,MAAM,IAAI,KAAK,CAAC,uBAAuB,CAAC,CAAC;QAC7C,CAAC;QACD,MAAM,YAAY,GAAG,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,WAAW,CAAC;QACxD,MAAM,cAAc,GAAG,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,SAAS,CAAC;QAC1D,OAAO,IAAI,QAAQ,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC;IACtD,CAAC;IAED;;;OAGG;IACH,GAAG;QACC,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IAC9E,CAAC;IAED;;;OAGG;IACH,QAAQ;QACJ,IAAI,IAAI,CAAC,WAAW,KAAK,CAAC,EAAE,CAAC;YACzB,OAAO,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QAC/B,CAAC;aAAM,CAAC;YACJ,OAAO,GAAG,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,WAAW,EAAE,CAAC;QACnD,CAAC;IACL,CAAC;CACJ;AAhGD,4BAgGC","sourcesContent":["/**\n * Clase que representa un número racional\n */\nexport class Rational {\n    /**\n     * Constructor de la clase\n     * @param numerator Numerador\n     * @param denominator Denominador\n     */\n    constructor(public numerator: number, public denominator: number) {\n        if (denominator === 0) {\n            throw new Error('Denominator cannot be zero');\n        }\n        const gcd = this.greatestCommonDivisor(Math.abs(numerator), Math.abs(denominator));\n        this.numerator = numerator / gcd;\n        this.denominator = denominator / gcd;\n  \n        if (denominator < 0) {\n            this.numerator = -this.numerator;\n            this.denominator = -this.denominator;\n        }\n    }\n  \n    /**\n     * Método que calcula el máximo común divisor entre dos números\n     * @param a Número 1\n     * @param b Número 2\n     * @returns Máximo común divisor\n     */\n    private greatestCommonDivisor(a: number, b: number): number {\n        return b === 0 ? a : this.greatestCommonDivisor(b, a % b);\n    }\n    \n    /**\n     * Método que suma dos números racionales\n     * @param other Número racional a sumar\n     * @returns Número racional resultante\n     */\n    add(other: Rational): Rational {\n        const newNumerator = this.numerator * other.denominator + other.numerator * this.denominator;\n        const newDenominator = this.denominator * other.denominator;\n        return new Rational(newNumerator, newDenominator);\n    }\n    \n    /**\n     * Método que resta dos números racionales\n     * @param other Número racional a restar\n     * @returns Número racional resultante\n     */\n    subtract(other: Rational): Rational {\n        const newNumerator = this.numerator * other.denominator - other.numerator * this.denominator;\n        const newDenominator = this.denominator * other.denominator;\n        return new Rational(newNumerator, newDenominator);\n    }\n    \n    /**\n     * Método que multiplica dos números racionales\n     * @param other Número racional a multiplicar\n     * @returns Número racional resultante\n     */\n    multiply(other: Rational): Rational {\n        const newNumerator = this.numerator * other.numerator;\n        const newDenominator = this.denominator * other.denominator;\n        return new Rational(newNumerator, newDenominator);\n    }\n    \n    /**\n     * Método que divide dos números racionales\n     * @param other Número racional a dividir\n     * @returns Número racional resultante\n     */\n    divide(other: Rational): Rational {\n        if (other.numerator === 0) {\n            throw new Error('Cannot divide by zero');\n        }\n        const newNumerator = this.numerator * other.denominator;\n        const newDenominator = this.denominator * other.numerator;\n        return new Rational(newNumerator, newDenominator);\n    }\n\n    /**\n     * Método que devuelve el valor absoluto de un número racional\n     * @returns Número racional con valor absoluto\n     */\n    abs(): Rational {\n        return new Rational(Math.abs(this.numerator), Math.abs(this.denominator));\n    }\n    \n    /**\n     * Método que devuelve el valor del número racional en formato string\n     * @returns Número racional en formato string\n     */\n    toString(): string {\n        if (this.denominator === 1) {\n            return `${this.numerator}`;\n        } else {\n            return `${this.numerator}/${this.denominator}`;\n        }\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"8b8e0b750e116203888c57995b7136415656ba78","contentHash":"43bed5303843b1e3f986b7fcf228921f46247eddead1755a046365d147b2f873"},"/home/usuario/practicas/Guillermo-Plaza-practica7/src/ejercicio-clase/complex/complex.ts":{"path":"/home/usuario/practicas/Guillermo-Plaza-practica7/src/ejercicio-clase/complex/complex.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":25}},"2":{"start":{"line":16,"column":8},"end":{"line":16,"column":25}},"3":{"start":{"line":17,"column":8},"end":{"line":17,"column":35}},"4":{"start":{"line":25,"column":8},"end":{"line":25,"column":91}},"5":{"start":{"line":33,"column":8},"end":{"line":33,"column":101}},"6":{"start":{"line":41,"column":26},"end":{"line":41,"column":56}},"7":{"start":{"line":42,"column":26},"end":{"line":42,"column":66}},"8":{"start":{"line":43,"column":25},"end":{"line":43,"column":54}},"9":{"start":{"line":44,"column":31},"end":{"line":44,"column":66}},"10":{"start":{"line":45,"column":31},"end":{"line":45,"column":66}},"11":{"start":{"line":46,"column":30},"end":{"line":46,"column":64}},"12":{"start":{"line":47,"column":8},"end":{"line":47,"column":52}},"13":{"start":{"line":55,"column":29},"end":{"line":55,"column":60}},"14":{"start":{"line":56,"column":29},"end":{"line":56,"column":70}},"15":{"start":{"line":57,"column":28},"end":{"line":57,"column":58}},"16":{"start":{"line":58,"column":26},"end":{"line":58,"column":56}},"17":{"start":{"line":59,"column":26},"end":{"line":59,"column":66}},"18":{"start":{"line":60,"column":25},"end":{"line":60,"column":71}},"19":{"start":{"line":61,"column":31},"end":{"line":61,"column":66}},"20":{"start":{"line":62,"column":31},"end":{"line":62,"column":66}},"21":{"start":{"line":63,"column":30},"end":{"line":63,"column":91}},"22":{"start":{"line":64,"column":8},"end":{"line":64,"column":52}},"23":{"start":{"line":71,"column":21},"end":{"line":71,"column":61}},"24":{"start":{"line":72,"column":8},"end":{"line":72,"column":85}},"25":{"start":{"line":75,"column":0},"end":{"line":75,"column":26}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":15,"column":4},"end":{"line":15,"column":5}},"loc":{"start":{"line":15,"column":33},"end":{"line":18,"column":5}},"line":15},"1":{"name":"(anonymous_1)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":15},"end":{"line":26,"column":5}},"line":24},"2":{"name":"(anonymous_2)","decl":{"start":{"line":32,"column":4},"end":{"line":32,"column":5}},"loc":{"start":{"line":32,"column":20},"end":{"line":34,"column":5}},"line":32},"3":{"name":"(anonymous_3)","decl":{"start":{"line":40,"column":4},"end":{"line":40,"column":5}},"loc":{"start":{"line":40,"column":20},"end":{"line":48,"column":5}},"line":40},"4":{"name":"(anonymous_4)","decl":{"start":{"line":54,"column":4},"end":{"line":54,"column":5}},"loc":{"start":{"line":54,"column":18},"end":{"line":65,"column":5}},"line":54},"5":{"name":"(anonymous_5)","decl":{"start":{"line":70,"column":4},"end":{"line":70,"column":5}},"loc":{"start":{"line":70,"column":15},"end":{"line":73,"column":5}},"line":70}},"branchMap":{"0":{"loc":{"start":{"line":71,"column":21},"end":{"line":71,"column":61}},"type":"cond-expr","locations":[{"start":{"line":71,"column":52},"end":{"line":71,"column":55}},{"start":{"line":71,"column":58},"end":{"line":71,"column":61}}],"line":71}},"s":{"0":1,"1":1,"2":12,"3":12,"4":2,"5":2,"6":2,"7":2,"8":2,"9":2,"10":2,"11":2,"12":2,"13":2,"14":2,"15":2,"16":2,"17":2,"18":2,"19":2,"20":2,"21":2,"22":2,"23":8,"24":8,"25":1},"f":{"0":12,"1":2,"2":2,"3":2,"4":2,"5":8},"b":{"0":[2,6]},"inputSourceMap":{"version":3,"file":"/home/usuario/practicas/Guillermo-Plaza-practica7/src/ejercicio-clase/complex/complex.ts","sources":["/home/usuario/practicas/Guillermo-Plaza-practica7/src/ejercicio-clase/complex/complex.ts"],"names":[],"mappings":";;;AAEA;;GAEG;AACH,MAAa,OAAO;IAMG;IAAuB;IAL1C;;;;OAIG;IACH,YAAmB,IAAc,EAAS,SAAmB;QAA1C,SAAI,GAAJ,IAAI,CAAU;QAAS,cAAS,GAAT,SAAS,CAAU;IAAG,CAAC;IAEjE;;;;OAIG;IACH,GAAG,CAAC,KAAc;QACd,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;IACvF,CAAC;IAED;;;;OAIG;IACH,QAAQ,CAAC,KAAc;QACnB,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;IACjG,CAAC;IAED;;;;OAIG;IACH,QAAQ,CAAC,KAAc;QACnB,MAAM,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACjD,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QAC3D,MAAM,QAAQ,GAAG,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;QAC/C,MAAM,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QAC3D,MAAM,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAC3D,MAAM,aAAa,GAAG,cAAc,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QACzD,OAAO,IAAI,OAAO,CAAC,QAAQ,EAAE,aAAa,CAAC,CAAC;IAChD,CAAC;IAED;;;;OAIG;IACH,MAAM,CAAC,KAAc;QACjB,MAAM,YAAY,GAAG,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACrD,MAAM,YAAY,GAAG,KAAK,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QAC/D,MAAM,WAAW,GAAG,YAAY,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QACnD,MAAM,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACjD,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QAC3D,MAAM,QAAQ,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;QAChE,MAAM,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAC3D,MAAM,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QAC3D,MAAM,aAAa,GAAG,CAAC,cAAc,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;QACpF,OAAO,IAAI,OAAO,CAAC,QAAQ,EAAE,aAAa,CAAC,CAAC;IAChD,CAAC;IAED;;;OAGG;IACH,QAAQ;QACJ,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;QACtD,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE,GAAG,CAAC;IACjF,CAAC;CACJ;AAnED,0BAmEC","sourcesContent":["import { Rational } from \"../rational/rational\";\n\n/**\n * Clase que representa un número complejo.\n */\nexport class Complex {\n    /**\n     * Constructor de la clase\n     * @param real Parte real\n     * @param imaginary Parte imaginaria\n     */\n    constructor(public real: Rational, public imaginary: Rational) {}\n\n    /**\n     * Método que suma dos números complejos\n     * @param other Número complejo a sumar\n     * @returns Número complejo resultante\n     */\n    add(other: Complex): Complex {\n        return new Complex(this.real.add(other.real), this.imaginary.add(other.imaginary));\n    }\n\n    /**\n     * Método que resta dos números complejos\n     * @param other Número complejo a restar\n     * @returns Número complejo resultante\n     */\n    subtract(other: Complex): Complex {\n        return new Complex(this.real.subtract(other.real), this.imaginary.subtract(other.imaginary));\n    } \n\n    /**\n     * Método que multiplica dos números complejos\n     * @param other Número complejo a multiplicar\n     * @returns Número complejo resultante\n     */\n    multiply(other: Complex): Complex {\n        const realPart1 = this.real.multiply(other.real);\n        const realPart2 = this.imaginary.multiply(other.imaginary);\n        const realPart = realPart1.subtract(realPart2);\n        const imaginaryPart1 = this.real.multiply(other.imaginary);\n        const imaginaryPart2 = this.imaginary.multiply(other.real);\n        const imaginaryPart = imaginaryPart1.add(imaginaryPart2);\n        return new Complex(realPart, imaginaryPart);\n    }\n\n    /**\n     * Método que divide dos números complejos\n     * @param other Número complejo a dividir\n     * @returns Número complejo resultante\n     */\n    divide(other: Complex): Complex {\n        const denominator1 = other.real.multiply(other.real);\n        const denominator2 = other.imaginary.multiply(other.imaginary);\n        const denominator = denominator1.add(denominator2);\n        const realPart1 = this.real.multiply(other.real);\n        const realPart2 = this.imaginary.multiply(other.imaginary);\n        const realPart = (realPart1.add(realPart2)).divide(denominator);\n        const imaginaryPart1 = this.imaginary.multiply(other.real);\n        const imaginaryPart2 = this.real.multiply(other.imaginary);\n        const imaginaryPart = (imaginaryPart1.subtract(imaginaryPart2)).divide(denominator);\n        return new Complex(realPart, imaginaryPart);\n    }\n\n    /**\n     * Método que devuelve el valor absoluto del número complejo\n     * @returns Valor absoluto\n     */\n    toString(): string {  // controlo los signos y quito el signo de la parte imaginaria\n        const sign = this.imaginary.numerator < 0 ? '-' : '+';\n        return `${this.real.toString()} ${sign} ${this.imaginary.abs().toString()}i`;\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"54dfffd45fa4760dd7aad5320b1c391effb5ab9f","contentHash":"164d9ac19873d2bb4e2eb2cd98a03043e5c95b4b3f9b87998a60968e3e73de81"},"/home/usuario/practicas/Guillermo-Plaza-practica7/src/ejercicio-clase/complex/adapter.ts":{"path":"/home/usuario/practicas/Guillermo-Plaza-practica7/src/ejercicio-clase/complex/adapter.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":40}},"2":{"start":{"line":4,"column":19},"end":{"line":4,"column":50}},"3":{"start":{"line":5,"column":18},"end":{"line":5,"column":38}},"4":{"start":{"line":16,"column":8},"end":{"line":16,"column":33}},"5":{"start":{"line":22,"column":8},"end":{"line":22,"column":83}},"6":{"start":{"line":25,"column":0},"end":{"line":25,"column":56}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":15,"column":4},"end":{"line":15,"column":5}},"loc":{"start":{"line":15,"column":26},"end":{"line":17,"column":5}},"line":15},"1":{"name":"(anonymous_1)","decl":{"start":{"line":21,"column":4},"end":{"line":21,"column":5}},"loc":{"start":{"line":21,"column":16},"end":{"line":23,"column":5}},"line":21}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1},"f":{"0":1,"1":1},"b":{},"inputSourceMap":{"version":3,"file":"/home/usuario/practicas/Guillermo-Plaza-practica7/src/ejercicio-clase/complex/adapter.ts","sources":["/home/usuario/practicas/Guillermo-Plaza-practica7/src/ejercicio-clase/complex/adapter.ts"],"names":[],"mappings":";;;AAAA,mDAAgD;AAChD,uCAAoC;AAEpC;;GAEG;AACH,MAAa,sBAAsB;IAKd;IAJnB;;;OAGG;IACH,YAAmB,QAAkB;QAAlB,aAAQ,GAAR,QAAQ,CAAU;IAAG,CAAC;IAEzC;;OAEG;IACH,SAAS;QACL,OAAO,IAAI,iBAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,mBAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC;CACF;AAbD,wDAaC","sourcesContent":["import { Rational } from '../rational/rational';\nimport { Complex } from './complex';\n\n/**\n * Adaptador que permite convertir un número racional en un número complejo.\n */\nexport class RationalComplexAdapter {\n  /**\n   * Constructor del adaptador\n   * @param rational Número racional a adaptar\n   */\n  constructor(public rational: Rational) {}\n\n  /**\n   * Convierte el número racional a un número complejo.\n   */\n  toComplex(): Complex {\n      return new Complex(this.rational, new Rational(0, 1));\n  }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2707759e75b10ddf1aeeaa0bbd5ecf2d5da4d7f5","contentHash":"8bee28120d9dc753812141bb2fa022209fe9f4823db36bb663fdbbfaf402ab04"}}